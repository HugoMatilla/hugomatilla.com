webpackJsonp([28966559285926],{351:function(e,a){e.exports={data:{markdownRemark:{html:'<p><img src="https://www.sparwelt.de/uploads/assets-01/Cashback/scondoo_header.jpg" alt="scondoo"></p>\n<p>I joined the <b><a href="https://scondoo.de">scondoo.de</a></b>, team soon after they got some VC funding. They needed an in-house Android Developer to help them increase its usability and features.</p>\n<p>The project was made by two agencies so the codebase was a bit mixed up. I was able to rapidly get used to the architecture, add new features fast and clean up all the UI.</p>\n<p>After a couple of years, and some reading I decided that the application needed an architecture update and I decided to implement the clean architecture in the app and do it using Kotlin. Using Kotlin was a bit risky because it was the beginning of 2016 before Google added it as an official programming language for Android, but after I first use it I knew it would be a matter of time most Android developers will use it as their main language.</p>\n<p>After some ups and downs refactoring, that I explain in this talk, I was able to increase the quality of the app and decrease the complexity of the code.</p>\n<iframe width="560" height="315" src="https://www.youtube.com/embed/4m774bHxRJE?rel=0" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen></iframe>\n<p>Nowadays I am focused on increasing the number of tests and implement a CI/CD server.</p>',frontmatter:{title:"Scondoo"}}},pathContext:{slug:"/scondoo/"}}}});
//# sourceMappingURL=path---scondoo-f32d877cda4ca0db9c83.js.map